#!/usr/bin/env bash
set -eu

echo "🔵 push"
source hooks/.config

# 1. push all images
# repo name plus tag
BUILD_IMAGE="${IMAGE_NAME//index.docker.io\/}"

# only repo name
BUILD_REPO="${DOCKER_REPO//index.docker.io\/}"

for arch in ${verified_build_architectures[@]}; do
  echo "✅ Pushing ${BUILD_IMAGE}-${arch}"
  echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
  echo
  docker push ${BUILD_IMAGE}-${arch}
done

docker image ls

# 2. build and push manifest
manifests=""

for arch in ${verified_build_architectures[@]}; do
  manifests="${manifests} ${BUILD_IMAGE}-${arch}"
done

tagparts=(${DOCKER_TAG//./ });
for tag in "${tagparts[@]}"; do
  if [ ! -v BUILD_NAME ]; then
    BUILD_NAME="${BUILD_REPO}:${tag}"
  else
    BUILD_NAME="${BUILD_NAME}.${tag}"
  fi

  echo "✅ Creating manifest ${BUILD_NAME}"
  echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
  docker manifest create --amend ${BUILD_NAME} $manifests
  echo

  echo "✅ Annotating manifest"
  echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
  for arch in ${verified_build_architectures[@]}; do
      if [ -n "${docker_to_variant_map[${arch}]}" ]; then
        docker manifest annotate ${BUILD_NAME} \
          ${BUILD_IMAGE}-${arch} \
          --os linux \
          --arch ${docker_to_manifest_map[${arch}]} \
          --variant ${docker_to_variant_map[${arch}]}
      else
        docker manifest annotate ${BUILD_NAME} \
          ${BUILD_IMAGE}-${arch} \
          --os linux \
          --arch ${docker_to_manifest_map[${arch}]}
      fi
  done

#  echo "✅ Inspecting manifest ${BUILD_NAME}-${arch}"
#  echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
#  docker manifest inspect ${BUILD_NAME}-${arch}
#  echo

  echo "✅ Pushing manifest ${BUILD_NAME}"
  echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
  docker manifest push --purge "${BUILD_NAME}"
  echo
done

if [[ ${!DOCKER_EXTRATAGS-x} == x ]]; then
  for tag in ${DOCKER_EXTRATAGS}; do
    BUILD_NAME="${BUILD_REPO}:${tag}"

    echo "✅ Creating manifest ${BUILD_NAME}"
    echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
    docker manifest create --amend ${BUILD_NAME} $manifests
    echo

    echo "✅ Annotating manifest"
    echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
    for arch in ${verified_build_architectures[@]}; do
        if [ -n "${docker_to_variant_map[${arch}]}" ]; then
          docker manifest annotate ${BUILD_NAME} \
            ${BUILD_IMAGE}-${arch} \
            --os linux \
            --arch ${docker_to_manifest_map[${arch}]} \
            --variant ${docker_to_variant_map[${arch}]}
        else
          docker manifest annotate ${BUILD_NAME} \
            ${BUILD_IMAGE}-${arch} \
            --os linux \
            --arch ${docker_to_manifest_map[${arch}]}
        fi
    done

    echo "✅ Pushing manifest ${BUILD_NAME}"
    echo "⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"
    docker manifest push --purge "${BUILD_NAME}"
    echo
  done
fi


echo
echo "😊"
